generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id
  email          String    @unique
  hashedPassword String
  sessions       Session[]

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Customer {
  id        String     @id
  name      String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime?  @updatedAt
  locations Location[]
}

model Location {
  id         String    @id
  address    String
  customerId String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
  devices    Device[]
  customer   Customer? @relation(fields: [customerId], references: [id], onDelete: Cascade)
  Group      Group[]
}

model Group {
  id   String @id
  name String

  locationId String
  location   Location @relation(fields: [locationId], references: [id], onDelete: Cascade)

  devices Device[]
}

enum DeviceType {
  Controller
  NVR
  CCTV_Camera
  Detector
}

model Device {
  id         String     @id
  name       String
  mac        String
  ip         String
  pin        Int
  deviceType DeviceType
  groupId    String?
  locationId String?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime?  @updatedAt
  location   Location?  @relation(fields: [locationId], references: [id], onDelete: Cascade)
  group      Group?     @relation(fields: [groupId], references: [id], onDelete: Cascade)
}
